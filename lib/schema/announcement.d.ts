import { z } from 'zod';
export declare const announcementSchema: z.ZodObject<{
    createdAt: z.ZodType<import("../utils/TimestampStub").TimestampStub, z.ZodTypeDef, import("../utils/TimestampStub").TimestampStub>;
    updatedAt: z.ZodType<import("../utils/TimestampStub").TimestampStub, z.ZodTypeDef, import("../utils/TimestampStub").TimestampStub>;
    communityId: z.ZodString;
    createdBy: z.ZodString;
    message: z.ZodString;
    status: z.ZodDefault<z.ZodEnum<["draft", "queued", "sending", "completed", "failed"]>>;
    targetUserIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    excludeUserIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    totalRecipients: z.ZodDefault<z.ZodNumber>;
    sentCount: z.ZodDefault<z.ZodNumber>;
    failedCount: z.ZodDefault<z.ZodNumber>;
    scheduledAt: z.ZodOptional<z.ZodType<import("../utils/TimestampStub").TimestampStub, z.ZodTypeDef, import("../utils/TimestampStub").TimestampStub>>;
    startedSendingAt: z.ZodOptional<z.ZodType<import("../utils/TimestampStub").TimestampStub, z.ZodTypeDef, import("../utils/TimestampStub").TimestampStub>>;
    completedAt: z.ZodOptional<z.ZodType<import("../utils/TimestampStub").TimestampStub, z.ZodTypeDef, import("../utils/TimestampStub").TimestampStub>>;
    errorMessage: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    createdAt: import("../utils/TimestampStub").TimestampStub;
    updatedAt: import("../utils/TimestampStub").TimestampStub;
    communityId: string;
    createdBy: string;
    message: string;
    status: "draft" | "queued" | "sending" | "completed" | "failed";
    totalRecipients: number;
    sentCount: number;
    failedCount: number;
    targetUserIds?: string[] | undefined;
    excludeUserIds?: string[] | undefined;
    scheduledAt?: import("../utils/TimestampStub").TimestampStub | undefined;
    startedSendingAt?: import("../utils/TimestampStub").TimestampStub | undefined;
    completedAt?: import("../utils/TimestampStub").TimestampStub | undefined;
    errorMessage?: string | undefined;
}, {
    createdAt: import("../utils/TimestampStub").TimestampStub;
    updatedAt: import("../utils/TimestampStub").TimestampStub;
    communityId: string;
    createdBy: string;
    message: string;
    status?: "draft" | "queued" | "sending" | "completed" | "failed" | undefined;
    targetUserIds?: string[] | undefined;
    excludeUserIds?: string[] | undefined;
    totalRecipients?: number | undefined;
    sentCount?: number | undefined;
    failedCount?: number | undefined;
    scheduledAt?: import("../utils/TimestampStub").TimestampStub | undefined;
    startedSendingAt?: import("../utils/TimestampStub").TimestampStub | undefined;
    completedAt?: import("../utils/TimestampStub").TimestampStub | undefined;
    errorMessage?: string | undefined;
}>;
export type Announcement = z.infer<typeof announcementSchema>;
export declare const announcementRecipientSchema: z.ZodObject<{
    createdAt: z.ZodType<import("../utils/TimestampStub").TimestampStub, z.ZodTypeDef, import("../utils/TimestampStub").TimestampStub>;
    updatedAt: z.ZodType<import("../utils/TimestampStub").TimestampStub, z.ZodTypeDef, import("../utils/TimestampStub").TimestampStub>;
    announcementId: z.ZodString;
    userId: z.ZodString;
    userName: z.ZodOptional<z.ZodString>;
    userPhoneNumber: z.ZodOptional<z.ZodString>;
    interpolatedMessage: z.ZodString;
    status: z.ZodDefault<z.ZodEnum<["pending", "sent", "failed"]>>;
    sentAt: z.ZodOptional<z.ZodType<import("../utils/TimestampStub").TimestampStub, z.ZodTypeDef, import("../utils/TimestampStub").TimestampStub>>;
    errorMessage: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    messageId: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    createdAt: import("../utils/TimestampStub").TimestampStub;
    updatedAt: import("../utils/TimestampStub").TimestampStub;
    status: "failed" | "pending" | "sent";
    announcementId: string;
    userId: string;
    interpolatedMessage: string;
    errorMessage?: string | undefined;
    userName?: string | undefined;
    userPhoneNumber?: string | undefined;
    sentAt?: import("../utils/TimestampStub").TimestampStub | undefined;
    sessionId?: string | undefined;
    messageId?: string | undefined;
}, {
    createdAt: import("../utils/TimestampStub").TimestampStub;
    updatedAt: import("../utils/TimestampStub").TimestampStub;
    announcementId: string;
    userId: string;
    interpolatedMessage: string;
    status?: "failed" | "pending" | "sent" | undefined;
    errorMessage?: string | undefined;
    userName?: string | undefined;
    userPhoneNumber?: string | undefined;
    sentAt?: import("../utils/TimestampStub").TimestampStub | undefined;
    sessionId?: string | undefined;
    messageId?: string | undefined;
}>;
export type AnnouncementRecipient = z.infer<typeof announcementRecipientSchema>;
