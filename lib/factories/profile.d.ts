import * as Factory from 'factory.ts';
import { TimestampStub } from '../utils/TimestampStub';
export declare const makeProfileFactory: (TimestampKlass: typeof TimestampStub) => Factory.Sync.Factory<{
    createdAt: TimestampStub;
    updatedAt: TimestampStub;
    name: string;
    uid: string;
    communityId?: string | undefined;
    headline?: string | undefined;
    helpWanted?: string | undefined;
    canOffer?: string | undefined;
    photoStoragePath?: string | undefined;
    phoneNumber?: string | undefined;
    emailPreferences?: {
        emailInsideCommunities: boolean;
        emailOutsideCommunities: boolean;
    } | undefined;
    linkedinProfile?: {
        state: string;
        accomplishment_patents: any[];
        country: string;
        occupation: string;
        education: any[];
        gender: string;
        city: string;
        people_also_viewed: any[];
        birth_date: string | null;
        inferred_salary: {
            min: number | null;
            max: number | null;
        };
        background_cover_image_url: string;
        industry: string;
        follower_count: number | null;
        recommendations: string[];
        skills: string[];
        accomplishment_publications: any[];
        extra: {
            github_profile_id: string | null;
            twitter_profile_id: string | null;
            facebook_profile_id: string | null;
        };
        personal_numbers: any[];
        volunteer_work: any[];
        public_identifier: string;
        profile_pic_url: string;
        first_name: string;
        headline: string;
        connections: number;
        summary: string;
        similarly_named_profiles: any[];
        languages: string[];
        accomplishment_courses: any[];
        groups: any[];
        last_name: string;
        certifications: any[];
        experiences: any[];
        country_full_name: string;
        full_name: string;
        accomplishment_organisations: any[];
        activities: any[];
        personal_emails: string[];
        accomplishment_test_scores: any[];
        interests: any[];
        articles: any[];
        accomplishment_projects: any[];
        accomplishment_honors_awards: any[];
    } | undefined;
    isCoordinator?: boolean | undefined;
}, ("createdAt" | "updatedAt" | "name" | "uid") | ("communityId" | "headline" | "helpWanted" | "canOffer" | "photoStoragePath" | "phoneNumber" | "emailPreferences" | "linkedinProfile" | "isCoordinator")>;
